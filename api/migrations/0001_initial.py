# Generated by Django 4.1.3 on 2023-01-13 09:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CropList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('rate', models.PositiveIntegerField()),
                ('district', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectAffectedPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pap_image', models.ImageField(blank=True, upload_to='pap_uploads')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('age', models.PositiveIntegerField()),
                ('address', models.CharField(max_length=128)),
                ('id_no', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=20, unique=True)),
                ('phone_number', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('apple_tree', 'apple_tree'), ('mango_tree', 'mango_tree'), ('avocado_tree', 'avocado_tree'), ('papaya_tree', 'papaya_tree'), ('orange_tree', 'orange_tree'), ('lemon_tree', 'lemon_tree'), ('black_willow_tree', 'black_willow_tree'), ('black_wallnut_tree', 'black_wallnut_tree'), ('beech_tree', 'beech_tree'), ('hazel_tree', 'hazel_tree'), ('common_ash_tree', 'common_ash_tree'), ('hawthorn_tree', 'hawthron_tree'), ('maple_tree', 'maple_tree'), ('oak_tree', 'oak_tree'), ('cedar_tree', 'cedar_tree'), ('cucumber_tree', 'cucumber_tree'), ('mivule_tree', 'mivule_tree'), ('jackfruit_tree', 'jackfruit_tree'), ('pine_tree', 'pine_tree'), ('moringa_tree', 'moringa_tree'), ('guava_tree', 'guava_tree'), ('banyan_tree', 'banyan_tree'), ('neem_tree', 'neem_tree'), ('peepal_tree', 'peepal_tree'), ('aloevera_tree', 'aloevera_tree'), ('eucalyptus_tree', 'eucalyptus_tree'), ('mahogany_tree', 'mahongany_tree'), ('tulip_tree', 'tulip_tree'), ('sal_tree', 'sal_tree'), ('cork_tree', 'cork_tree'), ('turmeric_tree', 'turmeric_tree'), ('teak_tree', 'teak_tree'), ('others', 'others(add in description)')], max_length=30)),
                ('description', models.CharField(blank=True, max_length=50)),
                ('tree_image', models.ImageField(blank=True, upload_to='tree_uploads')),
                ('quantity', models.PositiveSmallIntegerField(default=0)),
                ('rate', models.PositiveIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pap_trees', to='api.projectaffectedperson')),
            ],
        ),
        migrations.CreateModel(
            name='Land',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('land_type', models.CharField(choices=[('Urban/Built-up Land', 'Urban/Built-up Land'), ('Agricultural Land', 'Agricultural Land'), ('Rangeland', 'Rangeland'), ('Forest Land', 'Forest Land'), ('Water Areas', 'Water Areas'), ('Wetland', 'Wetland'), ('Barren Land.', 'Barren Land'), ('Tundra', 'Tundra'), ('Perennial snow or ice', 'Perennial snow or ice'), ('Others(add in description)', 'Others(add in description)')], max_length=40)),
                ('land_image', models.ImageField(blank=True, upload_to='land_uploads')),
                ('survey_no', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('tenure', models.CharField(choices=[('Mailo Land', 'Mailo Land'), ('Freehold Land', 'Freehold Land'), ('Lease Land', 'Lease Land'), ('Customary Land', 'Customary Land')], max_length=20)),
                ('size', models.FloatField(blank=True)),
                ('location', models.CharField(max_length=255)),
                ('land_use', models.TextField(blank=True)),
                ('land_services', models.TextField(blank=True)),
                ('rate', models.PositiveIntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('pap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pap_lands', to='api.projectaffectedperson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_lands', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_image', models.ImageField(blank=True, upload_to='crop_uploads')),
                ('description', models.CharField(blank=True, max_length=50)),
                ('quantity', models.PositiveIntegerField()),
                ('quality', models.CharField(choices=[('Mature_good', 'Mature_good'), ('Mature', 'Mature'), ('Immature_good', 'Immature_good'), ('Immature', 'Immature')], max_length=20)),
                ('rate', models.PositiveIntegerField()),
                ('rating', models.PositiveSmallIntegerField(choices=[(4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], default=5)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_list', to='api.croplist')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL)),
                ('pap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pap_crops', to='api.projectaffectedperson')),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionBuilding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Fire-resistive', 'Fire-resistive'), ('Non-combustible', 'Non-combustible'), ('Ordinary', 'Ordinary'), ('Heavy timber', 'Heavy timber'), ('Wood-framed', 'Wood-framed')], max_length=30)),
                ('construction_image', models.ImageField(blank=True, upload_to='construction_uploads')),
                ('size', models.FloatField(default=0)),
                ('number_of_construction', models.PositiveSmallIntegerField(default=0)),
                ('rate', models.PositiveIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pap_construction', to='api.projectaffectedperson')),
            ],
        ),
    ]
